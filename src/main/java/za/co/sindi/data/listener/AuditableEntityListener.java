/**
 * 
 */
package za.co.sindi.data.listener;

import java.time.Instant;
import java.time.LocalDateTime;

import jakarta.persistence.PersistenceException;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import za.co.sindi.data.entity.CreatedAuditable;
import za.co.sindi.data.entity.LastModifiedAuditable;
import za.co.sindi.data.entity.SoftDeleted;
import za.co.sindi.data.entity.SoftDeletedAuditable;
import za.co.sindi.data.entity.SoftDeletedTimestamp;

/**
 * This Entity Listener acts as a sanity check for timestamps and audits that needs to be entered explicitly, i.e., not auto-generated by the DB providers.
 * 
 * @author Buhake Sindi
 * @since 14 October 2023
 */
public class AuditableEntityListener {

	@PrePersist
	public void onPrePersist(final Object entity) {
		if (entity instanceof CreatedAuditable auditable) {
			onPrePersistAuditable(auditable);
		}
	}
	
	@PreUpdate
	public void onPreUpdate(final Object entity) {
//		if (entity instanceof CreatedTimestamp auditable) {
//			//This is just for sanity check
//			onPreUpdateCreatedTemporal(auditable);
//		}
		
		if (entity instanceof CreatedAuditable auditable) {
			//This is just for sanity check
			onPreUpdateCreatedAuditable(auditable);
		}
		
		if (entity instanceof LastModifiedAuditable auditable) {
			onPreUpdateAuditable(auditable);
		}
		
		if (entity instanceof SoftDeleted e) {
			if (e instanceof SoftDeletedAuditable auditable)
				onPreUpdateAuditable(auditable);
			
			if (e instanceof SoftDeletedTimestamp auditable)
				onPreUpdateTemporal(auditable);
		}
		
	}
	
	private void onPrePersistAuditable(CreatedAuditable<?> entity) {
		if (entity.getCreatedBy() == null) {
			throw new PersistenceException("Error found on PrePersist. No createdBy attribute has been populated (in entity class " + entity.getClass().getName() + ").");
		}
	}
	
//	private void onPreUpdateCreatedTemporal(CreatedTimestamp entity) {
//		if (entity.getCreatedOn() == null) {
//			throw new PersistenceException("Error found on PreUpdate. No createdOn has been specified (in entity class " + entity.getClass().getName() + ").");
//		}
//	}
	
	private void onPreUpdateCreatedAuditable(CreatedAuditable<?> entity) {
		if (entity.getCreatedBy() == null) {
			throw new PersistenceException("Error found on PreUpdate. No createdBy attribute has been populated (in entity class " + entity.getClass().getName() + ").");
		}
	}
	
	private void onPreUpdateAuditable(LastModifiedAuditable<?> entity) {
		onPrePersistAuditable(entity);
		if (entity.getLastModifiedBy() == null) {
			throw new PersistenceException("Error found on PreUpdate. No lastModifiedBy attribute has been specified (in entity class " + entity.getClass().getName() + ").");
		}
	}
	
	private void onPreUpdateAuditable(SoftDeletedAuditable<?> entity) {
//		onPreUpdateAuditable((LastModifiedAuditable<?>) entity);
		if (entity.isDeleted() && entity.getDeletedBy() == null) {
			throw new PersistenceException("Error found on PreUpdate. No deletedBy attribute has been specified (in entity class " + entity.getClass().getName() + ").");
		}
		
		if (!entity.isDeleted()) {
			entity.setDeletedBy(null);
		}
	}
	
	private void onPreUpdateTemporal(SoftDeletedTimestamp entity) {
		if (entity.isDeleted() && entity.getDeletedOn() == null) {
//			throw new PersistenceException("Error found on PreUpdate. No deletedOn has been specified (in entity class " + entity.getClass().getName() + ").");
			entity.setDeletedOn(LocalDateTime.now());
		}
		
		if (!entity.isDeleted()) {
			entity.setDeletedOn((Instant)null);
		}
	}
}
